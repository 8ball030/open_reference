# Generated by Django 4.2 on 2023-04-07 10:13
from datetime import datetime

from django.db import migrations
from repos.constants import (
    DEFAULT_AUTHOR,
    DEFAULT_REPO_NAME,
    DEFAULT_OWNER,
    DEFAULT_REPO_URL,
    DEFAULT_TOOL,
    DEFAULT_TOOL_URL,
    DEFAULT_LANGUAGE,
    DEFAULT_LANGUAGE_URL,
    DEFAULT_TOOL_DESCRIPTION,
    DEFAULT_LANGUAGE_DESCRIPTION,
    DEFAULT_ROLE,
    DEFAULT_ROLE_DESCRIPTION,
)


def create_tool(apps, schema_editor):
    Tool = apps.get_model("repos", "tool")
    tools = [
        ("Fish", "https://fishshell.com", "Fish is a smart and user-friendly command line shell for macOS, Linux, and the rest of the family."),
        ("Bash", "https://www.gnu.org/software/bash", "Bash is the GNU Project's shell. Bash is the Bourne Again SHell. Bash is an sh-compatible shell that incorporates useful features from the Korn shell (ksh) and C shell (csh)."),
        ("Open Autonomy", "https://docs.autonolas.network", "Open Autonomy is a collection of open source tools for autonomous distributed multi agent sytems secured on chain."),
        ("Open Aea", "https://open-aea.docs.autonolas.tech", "Open Aea is a collection of open source tools for autonomous distributed multi agent sytems secured on chain."),
        ("Ubuntu", "https://ubuntu.com", "Ubuntu is an open source software operating system that runs from the desktop, to the cloud, to all your internet connected things."),
        ("Debian", "https://www.debian.org", "Debian is a free operating system (OS) for your computer. An operating system is the set of basic programs and utilities that make your computer run."),
        ("Next.js", "https://nextjs.org", "Next.js is an open-source React front-end development web framework that enables functionality such as server-side rendering and generating static websites for React based web applications."),
        ("React", "https://reactjs.org", "React is a JavaScript library for building user interfaces."),
        ("Django", "https://www.djangoproject.com", "Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design."),
        ("Solana", "https://solana.com", "Solana is a high-performance blockchain built for fast, secure, and scalable decentralized applications."),
        ("Gatus.io", "https://gatus.io", "Gatus is a simple, self-hosted, highly available service status page."),
        ("Github Actions", "https://https://github.com/features/actions", "GitHub Actions is a feature of GitHub that allows you to run custom scripts or commands after certain events, such as a push or a pull request."),
        ("Docker", "https://www.docker.com", "Docker is a set of platform as a service (PaaS) products that use OS-level virtualization to deliver software in packages called containers."),
        ("k9s", "https://k9scli.io", "K9s is a terminal based UI to interact with your Kubernetes clusters."),
        ("Kubernetes", "https://kubernetes.io", "Kubernetes, also known as K8s, is an open-source system for automating deployment, scaling, and management of containerized applications."),
        ("Terraform", "https://www.terraform.io", "Terraform is an open-source infrastructure as code software tool created by HashiCorp."),
        ("Ansible", "https://www.ansible.com", "Ansible is an open-source software provisioning, configuration management, and application-deployment tool enabling infrastructure as code."),
        ("Ethereum", "https://ethereum.org", "Ethereum is a decentralized, open-source blockchain with smart contract functionality."),
        ("Nethermind", "https://nethermind.io", "Nethermind is an open-source Ethereum client written in C#."),
        ("Geth", "https://geth.ethereum.org", "Geth is the official command-line client for running a full Ethereum node implemented in Go."),
        ("Cert Manager", "https://cert-manager.io", "Cert Manager is a native Kubernetes certificate management controller."),
        ("MiniKube", "https://minikube.sigs.k8s.io", "MiniKube is a tool that makes it easy to run Kubernetes locally."),
        ("Kind", "https://kind.sigs.k8s.io", "Kind is a tool for running local Kubernetes clusters using Docker container 'nodes'."),
        ("Typhoon", "https://typhoon.psdn.io", "Typhoon is a minimal, free, open source, community-driven Kubernetes distribution."),
        ("Argo Workflows", "https://argoproj.github.io/argo-workflows", "Argo Workflows is a container-native workflow engine for orchestrating parallel jobs on Kubernetes."),
        ("Argo Events", "https://argoproj.github.io/argo-events", "Argo Events is an event-based workflow automation framework for Kubernetes."),
        ("Kuma Uptime", "https://kuma.uptime.com", "Kuma Uptime is a free, open source, and self-hosted uptime monitoring tool."),
        ("SQLAlchemy", "https://www.sqlalchemy.org", "SQLAlchemy is the Python SQL toolkit and Object Relational Mapper that gives application developers the full power and flexibility of SQL."),
        ("PostgreSQL", "https://www.postgresql.org", "PostgreSQL, often simply Postgres, is an object-relational database management system (ORDBMS) with an emphasis on extensibility and standards compliance."),
        ("Redis", "https://redis.io", "Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker."),
        ("MongoDB", "https://www.mongodb.com", "MongoDB is a cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas."),
        ("Kafka", "https://kafka.apache.org", "Apache Kafka is an open-source stream-processing software platform developed by the Apache Software Foundation, written in Scala and Java."),
        ("Pandas", "https://pandas.pydata.org", "Pandas is a software library written for the Python programming language for data manipulation and analysis."),
        ("Numpy", "https://numpy.org", "NumPy is a Python library used for working with arrays. It also has functions for working in domain of linear algebra, fourier transform, and matrices."),
        ("Scikit-learn", "https://scikit-learn.org", "Scikit-learn is a free software machine learning library for the Python programming language."),
        ("Tensorflow", "https://www.tensorflow.org", "TensorFlow is an end-to-end open source platform for machine learning."),

    ]
    for tool in tools:
        Tool.objects.create(
            name=tool[0],
            url=tool[1],
            description=tool[2],
        )
        # we check if the tool exists
        if not Tool.objects.filter(name=tool[0]).exists():
            Tool.objects.create(
                name=tool[0],
                url=tool[1],
                description=tool[2],
            )
        else:
            # we merge the tool
            tool_obj = Tool.objects.get(name=tool[0])
            tool_obj.url = tool[1]
            tool_obj.description = tool[2]
            tool_obj.save()




#
# def create_language(apps, schema_editor):
#     Language = apps.get_model("repos", "language")
#     Language.objects.create(
#         name=DEFAULT_LANGUAGE,
#         url=DEFAULT_LANGUAGE_URL,
#         description=DEFAULT_LANGUAGE_DESCRIPTION,
#     )


# def create_role(apps, schema_editor):
#     Role = apps.get_model("repos", "role")
#     if not Role.objects.filter(name=DEFAULT_ROLE).exists():
#         Role.objects.create(
#             name=DEFAULT_ROLE,
#             description=DEFAULT_ROLE_DESCRIPTION,
#         )


def create_organization(apps, schema_editor):
    Organization = apps.get_model("repos", "organization")
    organisations = [
        ("Valory.xyz", "https://valory.xyz", "Valory is a web3 startup dedicated to building the future of decentralized multi agent services"),
        ("Mobix", "https://mobix.io", "Mobix is a web3 startup dedicated to building the reducing carbon emissions through blockchain technology"),
        ("Datarella", "https://datarella.com", "Datarella is a web3 contracting company specialising in connecting data science and blockchain technology through partnerships with leading organisations such as Bosch, Tesla, and web3 startups such as Mobix."),
        ("Agent3", "https://agent3.io", "Agent3 is a marketing company specialising in providing targeted marketing solutions to large traditional technology institutions such as LinkedIn, Google and VMware."),
    ]
    for organisation in organisations:
        Organization.objects.create(
            name=organisation[0],
            url=organisation[1],
            description=organisation[2],
        )



class Migration(migrations.Migration):

    dependencies = [
        ("repos", "0003_rename_hash_commit_sha"),

    ]

    operations = [
        # migrations.RunPython(create_author),
        # migrations.RunPython(create_owner),
        # migrations.RunPython(create_repos),
        migrations.RunPython(create_tool),
        # migrations.RunPython(create_language),
        # migrations.RunPython(create_role),
    ]
